/*imperative program*/void main() {
    gib();
    vor();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    vor();
    vor();
    vor();
    gib();
    linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    gib();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    linksUm();
    vor();
    linksUm();
	vor();
	vor();
	gib();
    vor();
	vor();
	vor();
	gib();
	vor();
	vor();
	vor();
	gib();
	while(vornFrei()==true)	{
    	vor();
    }
    linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    gib();
    vor();
    vor();
    gib();
	while(vornFrei()==true)	{
    	vor();
    }
    linksUm();
    vor();
    linksUm();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    gib();
	while(vornFrei()==true)	{
    	vor();
    }
    linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    gib();
    vor();
    gib();
	vor();
    gib();
	vor();
    gib();
    vor();
    vor();
    gib();
    vor();
    vor();
    gib();
    vor();
    gib();
    vor();
    gib();
	vor();
	gib();
    linksUm();
    vor();
    linksUm();
    vor();
    vor();
    vor();
	vor();
	gib();
	vor();
	vor();
	gib();
	while(vornFrei()==true)	{
    	vor();
    }
	linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    gib();
    vor();
    vor();
    gib();
   	while(vornFrei()==true)	{
    	vor();
    }
    linksUm();
    vor();
    linksUm();
    vor();
    vor();
    gib();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    vor();
    gib();
    while(vornFrei()==true)	{
    	vor();
    }
	linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    gib();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    linksUm();
    vor();
    linksUm();
    gib();
    vor();
    vor();
    vor();
    vor();
    vor();
    gib();
    vor();
    vor();
    vor();
    vor();
    vor();
    gib();
}
